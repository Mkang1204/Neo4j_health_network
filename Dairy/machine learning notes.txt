1. NN and DL
http://neuralnetworksanddeeplearning.com/chap3.html
2. Google glossary
https://developers.google.cn/machine-learning/glossary/?hl=zh-CN#neural_network
3. ML interview Q&A
https://medium.com/subhrajit-roy/cracking-the-machine-learning-interview-1d8c5bb752d8

4. TOP COMPANIES LIST
https://www.linkedin.com/pulse/linkedin-top-companies-2018-where-us-wants-work-now-daniel-roth/


5. Python ApI for CNTK
https://cntk.ai/pythondocs/CNTK_103A_MNIST_DataLoader.html

6. deep learning 
我的结论是：如果你想进入这一领域，你应该首先学习 Python。尽管这一领域还支持其它很多语言，但 Python 是应用范围最广而且最简单的一个。但是为什么要选择 Python 呢——毕竟 Python 速度这么慢？因为大多数的库都使用的是符号式语言（symbolic language）方法而非命令式语言（imperative language）方法。解释一下也就是说：不是一条接一条地执行你的指令，而是根据你给出的所有指令创建一个计算图（computing graph）。这个图被内部优化和编译成可执行的 C++ 代码。这样你就能同时利用上两个世界的最优之处：Python 带来的开发速度和 C++ 带来的执行速度。

人们对深度学习的兴趣越来越大了，但人们并不愿意等待算法训练所需的大量计算时间（而且我说的是 GPU，想都不要想只使用 CPU）。这也是多 GPU 支持、多机器上的水平扩展甚至定制硬件最近开始得势的原因。

深度学习领域非常活跃、易变。很可能我现在所说的在 2017 年的中旬就变了。

我的建议是，如果你是初学者，使用 Keras，如果不是初学者，也可以使用它。如果你参加过 Kaggle 比赛，你肯定注意到了 Kaggle 的两大巨星：Keras 和 XGBoost。\
chrome-extension://ecabifbgmdmgdllomnfinbmaellmclnh/data/reader/index.html?id=794 
